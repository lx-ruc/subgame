args =  contract.txt
values =  ['player1', 'player2', '', '没有违规,', '0 10', '0 0']
values =  ['player1', 'player2', '', '拥有所有权,', '0 10', '0 0']
values =  ['player1', 'player2', '', '无留置权,', '0 10', '0 0']
values =  ['player1', 'player2', '', '无代理索赔,', '0 10', '0 0']
values =  ['player2', 'player1', '', '没有违约,', '0 10', '0 0']
values =  ['player2', 'player1', '1:sat:&,2:sat:&,3:sat:&,4:sat:&', 'pay,', '11 12', '6 4']
values =  ['player1', 'player2', '5:sat:&', 'delivery,', '12 13', '3 10']
values =  ['player2', 'player1', '6:sat:&,7:sat:&', 'pay_tex,', '14 14', '5 2']
values =  ['player1', 'player2', '1:vio:|,2:vio:|,3:vio:|,4:vio:|,7:vio:|', '仲裁(player1),0:sat', '15 15', '10 10']
values =  ['player2', 'player1', '5:vio:|,6:vio:|,8:vio:|', '仲裁(player2),0:sat', '16 16', '10 10']
commitment_data =  [('1', ['player1'], ['player2'], [''], ['没有违规', ''], ['0', '10'], ['0', '0']), ('2', ['player1'], ['player2'], [''], ['拥有所有权', ''], ['0', '10'], ['0', '0']), ('3', ['player1'], ['player2'], [''], ['无留置权', ''], ['0', '10'], ['0', '0']), ('4', ['player1'], ['player2'], [''], ['无代理索赔', ''], ['0', '10'], ['0', '0']), ('5', ['player2'], ['player1'], [''], ['没有违约', ''], ['0', '10'], ['0', '0']), ('6', ['player2'], ['player1'], ['1:sat:&', '2:sat:&', '3:sat:&', '4:sat:&'], ['pay', ''], ['11', '12'], ['6', '4']), ('7', ['player1'], ['player2'], ['5:sat:&'], ['delivery', ''], ['12', '13'], ['3', '10']), ('8', ['player2'], ['player1'], ['6:sat:&', '7:sat:&'], ['pay_tex', ''], ['14', '14'], ['5', '2']), ('9', ['player1'], ['player2'], ['1:vio:|', '2:vio:|', '3:vio:|', '4:vio:|', '7:vio:|'], ['仲裁(player1)', '0:sat'], ['15', '15'], ['10', '10']), ('10', ['player2'], ['player1'], ['5:vio:|', '6:vio:|', '8:vio:|'], ['仲裁(player2)', '0:sat'], ['16', '16'], ['10', '10'])]
commitment_data =  ('1', ['player1'], ['player2'], [''], ['没有违规', ''], ['0', '10'], ['0', '0'])
result =  没有违规  result_dependent =  ['']
commitment_data =  ('2', ['player1'], ['player2'], [''], ['拥有所有权', ''], ['0', '10'], ['0', '0'])
result =  拥有所有权  result_dependent =  ['']
commitment_data =  ('3', ['player1'], ['player2'], [''], ['无留置权', ''], ['0', '10'], ['0', '0'])
result =  无留置权  result_dependent =  ['']
commitment_data =  ('4', ['player1'], ['player2'], [''], ['无代理索赔', ''], ['0', '10'], ['0', '0'])
result =  无代理索赔  result_dependent =  ['']
commitment_data =  ('5', ['player2'], ['player1'], [''], ['没有违约', ''], ['0', '10'], ['0', '0'])
result =  没有违约  result_dependent =  ['']
commitment_data =  ('6', ['player2'], ['player1'], ['1:sat:&', '2:sat:&', '3:sat:&', '4:sat:&'], ['pay', ''], ['11', '12'], ['6', '4'])
result =  pay  result_dependent =  ['']
commitment_data =  ('7', ['player1'], ['player2'], ['5:sat:&'], ['delivery', ''], ['12', '13'], ['3', '10'])
result =  delivery  result_dependent =  ['']
commitment_data =  ('8', ['player2'], ['player1'], ['6:sat:&', '7:sat:&'], ['pay_tex', ''], ['14', '14'], ['5', '2'])
result =  pay_tex  result_dependent =  ['']
commitment_data =  ('9', ['player1'], ['player2'], ['1:vio:|', '2:vio:|', '3:vio:|', '4:vio:|', '7:vio:|'], ['仲裁(player1)', '0:sat'], ['15', '15'], ['10', '10'])
result =  仲裁(player1)  result_dependent =  ['0:sat']
commitment_data =  ('10', ['player2'], ['player1'], ['5:vio:|', '6:vio:|', '8:vio:|'], ['仲裁(player2)', '0:sat'], ['16', '16'], ['10', '10'])
result =  仲裁(player2)  result_dependent =  ['0:sat']
All pay off =  ['0', '0']
All pay off =  ['0', '0']
All pay off =  ['0', '0']
All pay off =  ['0', '0']
All pay off =  ['0', '0']
All pay off =  ['6', '4']
All pay off =  ['3', '10']
All pay off =  ['5', '2']
All pay off =  ['10', '10']
All pay off =  ['10', '10']
commitment.commitment_id =  1
commitment.Prerequisites =  None
commitment.result_Prerequisites =  None
commitment.commitment_id =  2
commitment.Prerequisites =  None
commitment.result_Prerequisites =  None
commitment.commitment_id =  3
commitment.Prerequisites =  None
commitment.result_Prerequisites =  None
commitment.commitment_id =  4
commitment.Prerequisites =  None
commitment.result_Prerequisites =  None
commitment.commitment_id =  5
commitment.Prerequisites =  None
commitment.result_Prerequisites =  None
commitment.commitment_id =  6
commitment.Prerequisites =  {1: ['sat', '&'], 2: ['sat', '&'], 3: ['sat', '&'], 4: ['sat', '&']}
commitment.result_Prerequisites =  None
commitment.commitment_id =  7
commitment.Prerequisites =  {5: ['sat', '&']}
commitment.result_Prerequisites =  None
commitment.commitment_id =  8
commitment.Prerequisites =  {6: ['sat', '&'], 7: ['sat', '&']}
commitment.result_Prerequisites =  None
commitment.commitment_id =  9
commitment.Prerequisites =  {1: ['vio', '|'], 2: ['vio', '|'], 3: ['vio', '|'], 4: ['vio', '|'], 7: ['vio', '|']}
commitment.result_Prerequisites =  {0: 'sat'}
commitment.commitment_id =  10
commitment.Prerequisites =  {5: ['vio', '|'], 6: ['vio', '|'], 8: ['vio', '|']}
commitment.result_Prerequisites =  {0: 'sat'}
____cur_node_status =  [2, 2, 2, 2, 2, 1, 1, 1, 1, 1]

----get_child----start----commitments = [2, 2, 2, 2, 2, 1, 1, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 没有违约
____index = 4,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 没有违约____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [2, 2, 2, 2, 3, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  6 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [2, 2, 2, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [2, 2, 2, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [2, 2, 2, 2, 5, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  6 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [2, 2, 2, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [2, 2, 2, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [2, 2, 2, 2, 2, 1, 1, 1, 1, 1]

----get_child----start----commitments = [2, 2, 2, 2, 2, 1, 1, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(0, <CommitmentStatus.BAS: 2>, 10), (1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 没有违规
____index = 0,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 没有违规____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 2, 2, 2, 2, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(0, <CommitmentStatus.BAS: 2>, 10), (1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 2, 2, 2, 2, 1, 1, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 2, 2, 2, 2, 1, 1, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [5, 2, 2, 2, 2, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(0, <CommitmentStatus.BAS: 2>, 10), (1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  True
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 2, 2, 2, 2, 1, 1, 1, 1, 1]
get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 2, 2, 2, 2, 1, 1, 1, 1, 1]
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [2, 2, 2, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [2, 2, 2, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(0, <CommitmentStatus.BAS: 2>, 10), (1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 没有违规
____index = 0,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 没有违规____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(0, <CommitmentStatus.BAS: 2>, 10), (1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [5, 2, 2, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(0, <CommitmentStatus.BAS: 2>, 10), (1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [5, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [5, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [5, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [5, 5, 5, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [5, 5, 5, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [5, 5, 5, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [5, 5, 5, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [5, 5, 5, 5, 5, 4, 4, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [5, 5, 5, 5, 5, 4, 4, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 2, 2, 2, 2, 1, 1, 1, 1, 1]

----get_child----start----commitments = [3, 2, 2, 2, 2, 1, 1, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 拥有所有权
____index = 1,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 拥有所有权____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 2, 2, 2, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 2, 2, 2, 1, 1, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 2, 2, 2, 1, 1, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 5, 2, 2, 2, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  True
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 2, 2, 2, 1, 1, 1, 1, 1]
get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 2, 2, 2, 1, 1, 1, 1, 1]
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 2, 2, 2, 2, 1, 1, 1, 1, 1]

----get_child----start----commitments = [3, 2, 2, 2, 2, 1, 1, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 没有违约
____index = 4,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 没有违约____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 2, 2, 2, 3, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  6 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 2, 2, 2, 5, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  6 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [5, 5, 5, 5, 5, 4, 4, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [5, 5, 5, 5, 5, 4, 4, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [3, 2, 2, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 拥有所有权
____index = 1,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 拥有所有权____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 5, 2, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [5, 5, 5, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [5, 5, 5, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [5, 5, 5, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [5, 5, 5, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [5, 5, 5, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [5, 5, 5, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [5, 5, 5, 5, 3, 4, 5, 4, 3, 1]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]

----get_child----start----commitments = [5, 5, 5, 5, 5, 4, 4, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  player1
____cur_node_status =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]

----get_child----start----commitments = [5, 5, 5, 5, 5, 4, 4, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 2, 2, 2, 1, 1, 1, 1, 1]

----get_child----start----commitments = [3, 3, 2, 2, 2, 1, 1, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 无留置权
____index = 2,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 无留置权____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 2, 2, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 2, 2, 1, 1, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 2, 2, 1, 1, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 5, 2, 2, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 2, 2, 1, 1, 1, 1, 1]
get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 2, 2, 1, 1, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 2, 2, 2, 1, 1, 1, 1, 1]

----get_child----start----commitments = [3, 3, 2, 2, 2, 1, 1, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 没有违约
____index = 4,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 没有违约____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 2, 2, 3, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  6 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 2, 2, 5, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  6 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
commitments.status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 5, 5, 5, 5, 4, 4, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 5, 5, 5, 5, 4, 4, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 2, 2, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [3, 2, 2, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 拥有所有权
____index = 1,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 拥有所有权____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 5, 2, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(1, <CommitmentStatus.BAS: 2>, 10), (2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 5, 5, 5, 5, 4, 4, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 5, 5, 5, 5, 4, 4, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 2]

----get_child----start----commitments = [5, 5, 5, 5, 5, 4, 4, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  player2
____cur_node_status =  [5, 5, 5, 5, 5, 4, 4, 4, 2, 3]

----get_child----start----commitments = [5, 5, 5, 5, 5, 4, 4, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [5, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 2, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 无留置权
____index = 2,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 无留置权____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 5, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [3, 5, 5, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 2, 2, 1, 1, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 2, 2, 1, 1, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 无代理索赔
____index = 3,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 无代理索赔____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 2, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 2, 2, 1, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 2, 2, 1, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 5, 2, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.ACT: 1>, 12), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 2, 2, 1, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 2, 2, 1, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 2, 2, 1, 1, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 2, 2, 1, 1, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 没有违约
____index = 4,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 没有违约____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 2, 3, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  6 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 2, 5, 1, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.ACT: 1>, 11), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  6 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
commitments.status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 3, 5, 5, 5, 4, 4, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 3, 5, 5, 5, 4, 4, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 2, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 无留置权
____index = 2,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 无留置权____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 5, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 3, 5, 5, 5, 4, 4, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 3, 5, 5, 5, 4, 4, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]

----get_child----start----commitments = [3, 5, 5, 5, 5, 4, 4, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  player2
____cur_node_status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]

----get_child----start----commitments = [3, 5, 5, 5, 5, 4, 4, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 2, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 2, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 无留置权
____index = 2,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 无留置权____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 5, 2, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(2, <CommitmentStatus.BAS: 2>, 10), (3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 5, 5, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [3, 5, 5, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 3, 4, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 5, 5, 5, 5, 4, 4, 4, 2, 3]

----get_child----start----commitments = [3, 5, 5, 5, 5, 4, 4, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  player1
____cur_node_status =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 2]

----get_child----start----commitments = [3, 5, 5, 5, 5, 4, 4, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 5, 5, 5, 5, 4, 4, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 无代理索赔
____index = 3,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 无代理索赔____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 5, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 5, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 2, 2, 1, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 2, 2, 1, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 没有违约
____index = 4,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 没有违约____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 2, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  6 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 5, 2, 1, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(4, <CommitmentStatus.BAS: 2>, 10), (5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([6, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  6
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  6 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  9 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  False
commitments.status =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
commitments.status =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 5, 5, 4, 4, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 5, 5, 4, 4, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 无代理索赔
____index = 3,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 无代理索赔____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 5, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 5, 5, 4, 4, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 5, 5, 4, 4, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]

----get_child----start----commitments = [3, 3, 5, 5, 5, 4, 4, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]

----get_child----start----commitments = [3, 3, 5, 5, 5, 4, 4, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 无代理索赔
____index = 3,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 无代理索赔____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 5, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 5, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 5, 5, 5, 4, 4, 4, 2, 3]

----get_child----start----commitments = [3, 3, 5, 5, 5, 4, 4, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 2]

----get_child----start----commitments = [3, 3, 5, 5, 5, 4, 4, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 5, 5, 5, 4, 4, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 2, 3, 1, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 2, 3, 1, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 无代理索赔
____index = 3,status = 2,time = 10,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 无代理索赔____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 5, 3, 1, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(3, <CommitmentStatus.BAS: 2>, 10), (6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([5, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  5
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  5 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.EXP
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
commitments.status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  8 commitments[cur_C_index].result =  仲裁(player1) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 5, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 5, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 5, 5, 3, 4, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 2, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 2, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay
____index = 5,status = 2,time = 12,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 5, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 3, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay
____index = 5,status = 2,time = 12,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 5, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 2, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 2, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 5, 5, 4, 4, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 5, 5, 4, 4, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 5, 5, 4, 4, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 5, 5, 4, 4, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 2, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 2, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay
____index = 5,status = 2,time = 12,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 5, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 3, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 5, 5, 4, 4, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 5, 5, 4, 4, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 5, 5, 4, 4, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 5, 5, 4, 4, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 2, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 2, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay
____index = 5,status = 2,time = 12,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 5, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 3, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 2, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 2, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 2, 2, 1, 1, 1],player = player2
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay
____index = 5,status = 2,time = 12,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 5, 2, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(5, <CommitmentStatus.BAS: 2>, 12), (7, <CommitmentStatus.ACT: 1>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([7, 9])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
commitments.status =  [3, 3, 3, 3, 3, 5, 5, 4, 1, 2]
commitments[cur_C_index].status == CommitmentStatus.BAS cur_C_index =  9 commitments[cur_C_index].result =  仲裁(player2) commitments[cur_C_index].result_Prerequisites =  {0: 'sat'}
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
____cur_node_status =  [3, 3, 3, 5, 3, 4, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 3, 5, 3, 4, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 5, 3, 4, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 3, 4, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 3, 4, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 3, 4, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 3, 4, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 3, 4, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 2, 1, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 2, 1, 1, 1],player = player1
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = delivery
____index = 6,status = 2,time = 13,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = delivery____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  8 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 1, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(6, <CommitmentStatus.BAS: 2>, 13), (8, <CommitmentStatus.ACT: 1>, 15)]
final_status_queue =  deque([7, 8])
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['sat', '&'] cur_C_index =  7
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  7 flag =  False
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  8
____commitments[key].status =  CommitmentStatus.EXP
____cur_C_index =  8 flag =  True
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.VIO
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.BAS
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 2],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 2, 1, 1],player = player2
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay_tex
____index = 7,status = 2,time = 14,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay_tex____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  7 commitments[i].finalpayoff =  [5, -2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 2, 1, 1],player = player2
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay_tex
____index = 7,status = 2,time = 14,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay_tex____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  7 commitments[i].finalpayoff =  [5, -2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 2, 1, 1],player = player2
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay_tex
____index = 7,status = 2,time = 14,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay_tex____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  7 commitments[i].finalpayoff =  [5, -2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 2, 1, 1],player = player2
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay_tex
____index = 7,status = 2,time = 14,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay_tex____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  7 commitments[i].finalpayoff =  [5, -2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 2, 1, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 2, 1, 1],player = player2
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = pay_tex
____index = 7,status = 2,time = 14,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = pay_tex____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  False
node commitments =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
must_executed =  False
vio_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 1]

----change_state_start----
player_commitments_index_status_time =  [(7, <CommitmentStatus.BAS: 2>, 14), (9, <CommitmentStatus.ACT: 1>, 16)]
final_status_queue =  deque([9])
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.SAT
cur_C_index ____Prerequisites_value =  ['vio', '|'] cur_C_index =  9
____commitments[key].status =  CommitmentStatus.ACT
____cur_C_index =  9 flag =  True
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2] player =  root
----change_state_end----

vio_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 3, 1, 1]
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  7 commitments[i].finalpayoff =  [5, -2]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 5, 4, 2, 1]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 5, 4, 2, 1],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 5, 4, 3, 1]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  8 commitments[i].finalpayoff =  [-10, 10]
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 2, 3],player = player1
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player1)
____index = 8,status = 2,time = 15,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player1)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(8, <CommitmentStatus.BAS: 2>, 15)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____cur_node_status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 5, 5, 4, 3, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  8 commitments[i].finalpayoff =  [-10, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----build_tree---- cur_node_child.payoff =  (0, 0) cur_node_child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 5, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 5, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 5, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 5, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
____cur_node_status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 2]

----get_child----start----commitments = [3, 3, 3, 3, 3, 3, 3, 5, 1, 2],player = player2
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
commitments[player_commitments_index_status_time[0][0]].result = 仲裁(player2)
____index = 9,status = 2,time = 16,commitments[index].status = CommitmentStatus.BAS,commitments[index].result = 仲裁(player2)____
BAS_position =  0 bas_effect =  True has_bas_status =  True
____bas_effect = True____
sat_child_node before change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]

----change_state_start----
player_commitments_index_status_time =  [(9, <CommitmentStatus.BAS: 2>, 16)]
final_status_queue =  deque([])
node commitments =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3] player =  root
----change_state_end----

sat_child_node after change state =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
----get_child_end----

get child return player_child_node =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
get child return
____cur_node_child_commitments status =  [3, 3, 3, 3, 3, 3, 3, 5, 1, 3]
i =  0 commitments[i].finalpayoff =  [0, 0]
i =  1 commitments[i].finalpayoff =  [0, 0]
i =  2 commitments[i].finalpayoff =  [0, 0]
i =  3 commitments[i].finalpayoff =  [0, 0]
i =  4 commitments[i].finalpayoff =  [0, 0]
i =  5 commitments[i].finalpayoff =  [6, -4]
i =  6 commitments[i].finalpayoff =  [-3, 10]
i =  9 commitments[i].finalpayoff =  [10, -10]
----postorder_traversal----Start
post_order_traversal cur_node.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] payoff =  None player =  player2
post order traversal cur_node.child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] pay off =  (0, 0)
----find_sub_tree_max_payoff-START----
child_commitemnts =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
player =  player2
player2 child commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player2 payoff =  (0, 0)
____i =  0 children[i] =  [<CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.EXP: 4>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>]

 children[i].payoff =  (0, 0)
player2 sub_EQ =  (0, 0)
node.children[max_index].payoff =  (0, 0)
----find_sub_tree_max_payoff-END----
post_order_traversal cur_node.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] payoff =  None player =  player1
post order traversal cur_node.child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2] pay off =  (0, 0)
----find_sub_tree_max_payoff-START----
child_commitemnts =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 2]
player =  player1
____i =  0 children[i] =  [<CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.EXP: 4>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.BAS: 2>]

	[<CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.EXP: 4>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>]

 children[i].payoff =  (0, 0)
player1 sub_EQ =  (0, 0)
node.children[max_index].payoff =  (0, 0)
----find_sub_tree_max_payoff-END----
post_order_traversal cur_node.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] payoff =  None player =  player1
post order traversal cur_node.child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] pay off =  (0, 0)
----find_sub_tree_max_payoff-START----
child_commitemnts =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3]
player =  player1
____i =  0 children[i] =  [<CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.EXP: 4>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>]

 children[i].payoff =  (0, 0)
player1 sub_EQ =  (0, 0)
node.children[max_index].payoff =  (0, 0)
----find_sub_tree_max_payoff-END----
post_order_traversal cur_node.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] payoff =  None player =  player2
post order traversal cur_node.child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] pay off =  (0, 0)
----find_sub_tree_max_payoff-START----
child_commitemnts =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3]
player =  player2
player2 child commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 3] player =  player1 payoff =  (0, 0)
child.payoff =  (0, 0) child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 3, 3] player =  player1
____i =  0 children[i] =  [<CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.EXP: 4>, <CommitmentStatus.BAS: 2>, <CommitmentStatus.SAT: 3>]

	[<CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.EXP: 4>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>]

 children[i].payoff =  (0, 0)
player2 sub_EQ =  (0, 0)
node.children[max_index].payoff =  (0, 0)
----find_sub_tree_max_payoff-END----
post_order_traversal cur_node.commitments =  [3, 3, 3, 3, 3, 2, 2, 1, 1, 1] payoff =  None player =  player1
post order traversal cur_node.child.commitments =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2] pay off =  None
post order traversal cur_node.child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] pay off =  (0, 0)
post order traversal cur_node.child.commitments =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2] pay off =  (0, 0)
----find_sub_tree_max_payoff-START----
child_commitemnts =  [3, 3, 3, 3, 3, 5, 3, 4, 1, 2]
child_commitemnts =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
child_commitemnts =  [3, 3, 3, 3, 3, 5, 5, 4, 2, 2]
player =  player1
____i =  0 children[i] =  [<CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.VIO: 5>, <CommitmentStatus.SAT: 3>, <CommitmentStatus.EXP: 4>, <CommitmentStatus.ACT: 1>, <CommitmentStatus.BAS: 2>]

 children[i].payoff =  None
